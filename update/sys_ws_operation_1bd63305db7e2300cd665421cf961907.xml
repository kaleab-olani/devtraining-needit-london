<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json,application/xml,text/xml</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri/>
        <enforce_acl>cf9d01d3e73003009d6247e603f6a990</enforce_acl>
        <http_method>GET</http_method>
        <name>get_user_needit (v2)</name>
        <operation_script><![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {

    // implement resource here
	var req_for = request.getHeader("user_name"); // username for the requested needit is requested for
	var q = request.queryParams.query;
	
	var requestUserName = new GlideRecord('sys_user');
	var gotUser = requestUserName.get('user_name',req_for);
	if(!gotUser){
		var myError = new sn_ws_err.ServiceError();
		myError.setStatus(404);
		myError.setMessage("User name not found");
		myError.setDetail("The username passed to the request is not a valid username.");
		return myError;
	}
	var userNICount = new GlideAggregate('x_58872_needit_needit');
	userNICount.addAggregate('COUNT');
	userNICount.addQuery('u_requested_for',requestUserName.sys_id);
	userNICount.addEncodedQuery(q);
	userNICount.groupBy('u_request_type');
	userNICount.query();
	var needitRecs = 0;
	var niUserRecs = [];
	var needitRecsCount = 0;

	while (userNICount.next()) {
		needitRecs = userNICount.getAggregate('COUNT');
		var reqType = userNICount.u_request_type.getDisplayValue();
		niUserRecs.push({"requestType": reqType, "count": needitRecs});
		needitRecsCount = parseInt(needitRecsCount) + parseInt(needitRecs);
	}

	//Create a body object.  Add property value pairs to the body.
	var body = {};
	body.totalUserNIRecs = needitRecsCount;
	body.catCounts = niUserRecs;
	body.user = {"User name": requestUserName.user_name,
	"User ID": requestUserName.sys_id};

	// Send the response object, which is returned to the requestor, to the body object.
	response.setBody(body);
	
	

})(request, response);]]></operation_script>
        <operation_uri>/api/x_58872_needit/v2/needit_q/getneedit</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/getneedit</relative_path>
        <request_example/>
        <requires_acl_authorization>true</requires_acl_authorization>
        <requires_authentication>false</requires_authentication>
        <requires_snc_internal_role>true</requires_snc_internal_role>
        <short_description>The request resource documentation is here</short_description>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-01-03 08:01:18</sys_created_on>
        <sys_id>1bd63305db7e2300cd665421cf961907</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>get_user_needit (v2)</sys_name>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_ws_operation_1bd63305db7e2300cd665421cf961907</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-01-03 08:06:45</sys_updated_on>
        <web_service_definition display_value="NeedIT api">7bc9ef4ddb3e2300cd665421cf96199f</web_service_definition>
        <web_service_version display_value="v2">5bd63305db7e2300cd665421cf961905</web_service_version>
    </sys_ws_operation>
</record_update>
